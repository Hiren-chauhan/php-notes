
/your_project
│
├── /assets
│   └── /js
│       └── script.js
│
├── /includes
│   └── db.php
│
├── /public
│   ├── forgot_password.php
│   ├── reset_password.php
│   └── update_password.php
│
└── /uploads

===================================================================================================================================
Step 1: Database Connection
Create a file named db.php in the includes folder to handle the database connection.
-----------------------------------------------------------------------------------------------------------------------------------
// includes/db.php
<?php
$servername = "localhost";
$username = "your_username"; // Replace with your database username
$password = "your_password"; // Replace with your database password
$dbname = "your_database"; // Replace with your database name

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>
===================================================================================================================================
Step 2: Create the Forgot Password Form
Create a file named forgot_password.php in the public folder.
-----------------------------------------------------------------------------------------------------------------------------------
<!-- public/forgot_password.php -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="../assets/js/script.js"></script>
</head>
<body>
    <h2>Forgot Password</h2>
    <form id="forgotPasswordForm">
        <input type="email" name="email" placeholder="Enter your email" required>
        <button type="submit">Send Reset Link</button>
    </form>
    <div id="responseMessage"></div>
</body>
</html>
===================================================================================================================================
Step 3: AJAX Script
Create a file named script.js in the assets/js folder to handle the AJAX request.
-----------------------------------------------------------------------------------------------------------------------------------
// assets/js/script.js
$(document).ready(function() {
    $('#forgotPasswordForm').on('submit', function(e) {
        e.preventDefault(); // Prevent the form from submitting normally

        $.ajax({
            type: 'POST',
            url: 'send_reset_link.php',
            data: $(this).serialize(),
            success: function(response) {
                $('#responseMessage').html(response);
            },
            error: function() {
                $('#responseMessage').html('An error occurred. Please try again.');
            }
        });
    });
});
===================================================================================================================================
Step 4: Handle the Form Submission
Create a file named send_reset_link.php in the public folder to handle the form submission, generate a token, and send the email.
-----------------------------------------------------------------------------------------------------------------------------------
// public/send_reset_link.php
<?php
require '../includes/db.php'; // Include your database connection

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if the email exists in the database
    $result = mysqli_query($conn, "SELECT * FROM users WHERE email = '$email'");
    $user = mysqli_fetch_assoc($result);

    if ($user) {
        // Generate a unique token
        $token = bin2hex(random_bytes(50));
        $expires = date("Y-m-d H:i:s", strtotime('+1 hour'));

        // Store the token and expiration in the database
        mysqli_query($conn, "UPDATE users SET reset_token = '$token', reset_token_expires = '$expires' WHERE email = '$email'");

        // Send the email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Click the link below to reset your password:\n";
        $message .= "http://yourdomain.com/public/reset_password.php?token=" . $token; // Update with your domain
        $headers = "From: no-reply@yourdomain.com";

        mail($to, $subject, $message, $headers);
        echo "A password reset link has been sent to your email.";
    } else {
        echo "No user found with that email address.";
    }
}

mysqli_close($conn);
?>
===================================================================================================================================
Step 5: Create the Reset Password Form
Create a file named reset_password.php in the public folder to allow users to enter a new password.
-----------------------------------------------------------------------------------------------------------------------------------
<!-- public/reset_password.php -->
<?php
require '../includes/db.php'; // Include your database connection

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_ GET['token']);

    // Validate the token
    $result = mysqli_query($conn, "SELECT * FROM users WHERE reset_token = '$token' AND reset_token_expires > NOW()");
    $user = mysqli_fetch_assoc($result);

    if (!$user) {
        die("Invalid or expired token.");
    }
} else {
    die("No token provided.");
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form id="resetPasswordForm">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <input type="password" name="new_password" placeholder="Enter new password" required>
        <button type="submit">Reset Password</button>
    </form>
    <div id="responseMessage"></div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function() {
            $('#resetPasswordForm').on('submit', function(e) {
                e.preventDefault(); // Prevent the form from submitting normally

                $.ajax({
                    type: 'POST',
                    url: 'update_password.php',
                    data: $(this).serialize(),
                    success: function(response) {
                        $('#responseMessage').html(response);
                    },
                    error: function() {
                        $('#responseMessage').html('An error occurred. Please try again.');
                    }
                });
            });
        });
    </script>
</body>
</html>
===================================================================================================================================
Step 6: Update Password Logic
Create a file named update_password.php in the public folder:
-----------------------------------------------------------------------------------------------------------------------------------
// public/update_password.php
<?php
require '../includes/db.php'; // Include your database connection

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get the token and new password from the form
    $token = mysqli_real_escape_string($conn, $_POST['token']);
    $new_password = password_hash($_POST['new_password'], PASSWORD_DEFAULT);

    // Check if the token is valid
    $result = mysqli_query($conn, "SELECT * FROM users WHERE reset_token = '$token' AND reset_token_expires > NOW()");
    $user = mysqli_fetch_assoc($result);

    if ($user) {
        // Update the password and clear the reset token
        mysqli_query($conn, "UPDATE users SET password = '$new_password', reset_token = NULL, reset_token_expires = NULL WHERE reset_token = '$token'");
        echo "Your password has been reset successfully.";
    } else {
        echo "Invalid or expired token.";
    }
}

// Close the database connection
mysqli_close($conn);
?>
